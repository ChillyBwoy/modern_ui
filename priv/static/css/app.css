/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
    monospace;
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-xs: 0.125rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --blur-xs: 4px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-background: rgba(255, 255, 255);
    --color-form-background: rgba(250, 250, 250);
    --color-primary: rgba(29, 78, 216);
    --color-primary-light: rgba(96, 165, 250);
    --color-primary-dark: rgba(30, 58, 138);
    --color-secondary: rgba(120, 113, 108);
    --color-secondary-light: rgba(214, 211, 209);
    --color-secondary-dark: rgba(51, 65, 85);
    --color-success: rgba(132, 204, 22);
    --color-success-light: rgba(217, 249, 157);
    --color-success-dark: rgba(77, 124, 15);
    --color-danger: rgba(239, 68, 68);
    --color-danger-light: rgba(254, 202, 202);
    --color-danger-dark: rgba(185, 28, 28);
    --color-warning: rgba(245, 158, 11);
    --color-warning-light: rgba(253, 230, 138);
    --color-warning-dark: rgba(180, 83, 9);
    --color-info: rgba(96, 165, 250);
    --color-info-light: rgba(219, 234, 254);
    --color-info-dark: rgba(59, 130, 246);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .invisible {
    visibility: hidden;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .-top-2 {
    top: calc(var(--spacing) * -2);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-8 {
    top: calc(var(--spacing) * 8);
  }
  .top-px {
    top: 1px;
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-px {
    right: 1px;
  }
  .bottom-px {
    bottom: 1px;
  }
  .-left-2 {
    left: calc(var(--spacing) * -2);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .no-scrollbar {
    &::-webkit-scrollbar {
      display: none;
    }
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-full {
    height: 100%;
  }
  .h-max {
    height: max-content;
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .max-w-80 {
    max-width: calc(var(--spacing) * 80);
  }
  .min-w-1\/2 {
    min-width: calc(1/2 * 100%);
  }
  .grow {
    flex-grow: 1;
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-4 {
    --tw-translate-y: calc(var(--spacing) * 4);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .appearance-none {
    appearance: none;
  }
  .grid-cols-\[1fr_auto\] {
    grid-template-columns: 1fr auto;
  }
  .grid-rows-\[auto_1fr\] {
    grid-template-rows: auto 1fr;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .place-content-center {
    place-content: center;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .scroll-container-h {
    overflow: auto;
    background: linear-gradient( to right, var(--color-background) 30%, rgba(255, 255, 255, 0) ), linear-gradient( to left, var(--color-background) 70%, rgba(255, 255, 255, 0) ) 100% 0, radial-gradient( farthest-side at 0% 50%, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0) ), radial-gradient( farthest-side at 100% 50%, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0) ) 100%;
    background-repeat: no-repeat;
    background-color: var(--color-background);
    background-size: 16px 100%, 16px 100%, 8px 100%, 8px 100%;
    background-attachment: local, local, scroll, scroll;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-xs {
    border-radius: var(--radius-xs);
  }
  .rounded-r-md {
    border-top-right-radius: var(--radius-md);
    border-bottom-right-radius: var(--radius-md);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-danger {
    border-color: var(--color-danger);
  }
  .border-danger-dark {
    border-color: var(--color-danger-dark);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-info-dark {
    border-color: var(--color-info-dark);
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-primary-dark {
    border-color: var(--color-primary-dark);
  }
  .border-secondary-dark {
    border-color: var(--color-secondary-dark);
  }
  .border-secondary-light {
    border-color: var(--color-secondary-light);
  }
  .border-success-dark {
    border-color: var(--color-success-dark);
  }
  .border-warning-dark {
    border-color: var(--color-warning-dark);
  }
  .mdi-close {
    --mdi-close: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" id="mdi-close" viewBox="0 0 24 24"><path d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" /></svg>');
    -webkit-mask: var(--mdi-close);
    mask: var(--mdi-close);
    mask-repeat: no-repeat;
    background-color: currentColor;
  }
  .mdi-dots-vertical {
    --mdi-dots-vertical: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" id="mdi-dots-vertical" viewBox="0 0 24 24"><path d="M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z" /></svg>');
    -webkit-mask: var(--mdi-dots-vertical);
    mask: var(--mdi-dots-vertical);
    mask-repeat: no-repeat;
    background-color: currentColor;
  }
  .mdi-exclamation-thick {
    --mdi-exclamation-thick: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" id="mdi-exclamation-thick" viewBox="0 0 24 24"><path d="M10 3H14V14H10V3M10 21V17H14V21H10Z" /></svg>');
    -webkit-mask: var(--mdi-exclamation-thick);
    mask: var(--mdi-exclamation-thick);
    mask-repeat: no-repeat;
    background-color: currentColor;
  }
  .mdi-information {
    --mdi-information: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" id="mdi-information" viewBox="0 0 24 24"><path d="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" /></svg>');
    -webkit-mask: var(--mdi-information);
    mask: var(--mdi-information);
    mask-repeat: no-repeat;
    background-color: currentColor;
  }
  .bg-danger {
    background-color: var(--color-danger);
  }
  .bg-danger-light {
    background-color: var(--color-danger-light);
  }
  .bg-form-background {
    background-color: var(--color-form-background);
  }
  .bg-info {
    background-color: var(--color-info);
  }
  .bg-info-light {
    background-color: var(--color-info-light);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-secondary {
    background-color: var(--color-secondary);
  }
  .bg-success {
    background-color: var(--color-success);
  }
  .bg-warning {
    background-color: var(--color-warning);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-cover {
    background-size: cover;
  }
  .mask-repeat {
    mask-repeat: repeat;
  }
  .fill-danger {
    fill: var(--color-danger);
  }
  .fill-info {
    fill: var(--color-info);
  }
  .fill-primary {
    fill: var(--color-primary);
  }
  .fill-secondary {
    fill: var(--color-secondary);
  }
  .fill-success {
    fill: var(--color-success);
  }
  .fill-warning {
    fill: var(--color-warning);
  }
  .fill-white {
    fill: var(--color-white);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pr-14 {
    padding-right: calc(var(--spacing) * 14);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .text-left {
    text-align: left;
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[1\.5rem\] {
    font-size: 1.5rem;
  }
  .text-\[1\.25rem\] {
    font-size: 1.25rem;
  }
  .text-\[1rem\] {
    font-size: 1rem;
  }
  .text-\[2rem\] {
    font-size: 2rem;
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-danger {
    color: var(--color-danger);
  }
  .text-danger-dark {
    color: var(--color-danger-dark);
  }
  .text-info {
    color: var(--color-info);
  }
  .text-info-dark {
    color: var(--color-info-dark);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-secondary {
    color: var(--color-secondary);
  }
  .text-secondary-dark {
    color: var(--color-secondary-dark);
  }
  .text-success {
    color: var(--color-success);
  }
  .text-warning {
    color: var(--color-warning);
  }
  .text-white {
    color: var(--color-white);
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-20 {
    opacity: 20%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-danger {
    --tw-ring-color: var(--color-danger);
  }
  .ring-info {
    --tw-ring-color: var(--color-info);
  }
  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .group-hover\:visible {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        visibility: visible;
      }
    }
  }
  .placeholder\:text-secondary-light {
    &::placeholder {
      color: var(--color-secondary-light);
    }
  }
  .backdrop\:backdrop-blur-xs {
    &::backdrop {
      --tw-backdrop-blur: blur(var(--blur-xs));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:top-0 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
  }
  .before\:right-0 {
    &::before {
      content: var(--tw-content);
      right: calc(var(--spacing) * 0);
    }
  }
  .before\:bottom-0 {
    &::before {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
  }
  .before\:left-0 {
    &::before {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .before\:flex {
    &::before {
      content: var(--tw-content);
      display: flex;
    }
  }
  .before\:items-center {
    &::before {
      content: var(--tw-content);
      align-items: center;
    }
  }
  .before\:justify-center {
    &::before {
      content: var(--tw-content);
      justify-content: center;
    }
  }
  .before\:text-sm {
    &::before {
      content: var(--tw-content);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .before\:font-bold {
    &::before {
      content: var(--tw-content);
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
  }
  .before\:text-primary {
    &::before {
      content: var(--tw-content);
      color: var(--color-primary);
    }
  }
  .after\:pointer-events-none {
    &::after {
      content: var(--tw-content);
      pointer-events: none;
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:top-4 {
    &::after {
      content: var(--tw-content);
      top: calc(var(--spacing) * 4);
    }
  }
  .after\:right-4 {
    &::after {
      content: var(--tw-content);
      right: calc(var(--spacing) * 4);
    }
  }
  .after\:block {
    &::after {
      content: var(--tw-content);
      display: block;
    }
  }
  .after\:h-2 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 2);
    }
  }
  .after\:w-3 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 3);
    }
  }
  .after\:bg-secondary {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-secondary);
    }
  }
  .after\:form-select-icon {
    &::after {
      content: var(--tw-content);
      clip-path: polygon(100% 0%, 0 0%, 50% 100%);
    }
  }
  .first\:rounded-t-md {
    &:first-child {
      border-top-left-radius: var(--radius-md);
      border-top-right-radius: var(--radius-md);
    }
  }
  .last\:rounded-b-md {
    &:last-child {
      border-bottom-right-radius: var(--radius-md);
      border-bottom-left-radius: var(--radius-md);
    }
  }
  .checked\:before\:content-\[attr\(data-checked\)\] {
    &:checked {
      &::before {
        content: var(--tw-content);
        --tw-content: attr(data-checked);
        content: var(--tw-content);
      }
    }
  }
  .hover\:bg-danger-dark {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger-dark);
      }
    }
  }
  .hover\:bg-info-dark {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-info-dark);
      }
    }
  }
  .hover\:bg-primary-dark {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-dark);
      }
    }
  }
  .hover\:bg-secondary-dark {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary-dark);
      }
    }
  }
  .hover\:bg-secondary-light {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary-light);
      }
    }
  }
  .hover\:bg-success-dark {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-success-dark);
      }
    }
  }
  .hover\:bg-warning-dark {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-warning-dark);
      }
    }
  }
  .hover\:text-danger-dark {
    &:hover {
      @media (hover: hover) {
        color: var(--color-danger-dark);
      }
    }
  }
  .hover\:text-info-dark {
    &:hover {
      @media (hover: hover) {
        color: var(--color-info-dark);
      }
    }
  }
  .hover\:text-primary-dark {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary-dark);
      }
    }
  }
  .hover\:text-secondary-dark {
    &:hover {
      @media (hover: hover) {
        color: var(--color-secondary-dark);
      }
    }
  }
  .hover\:text-success-dark {
    &:hover {
      @media (hover: hover) {
        color: var(--color-success-dark);
      }
    }
  }
  .hover\:text-warning-dark {
    &:hover {
      @media (hover: hover) {
        color: var(--color-warning-dark);
      }
    }
  }
  .hover\:opacity-40 {
    &:hover {
      @media (hover: hover) {
        opacity: 40%;
      }
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-danger-light {
    &:focus {
      --tw-ring-color: var(--color-danger-light);
    }
  }
  .focus\:ring-primary-light {
    &:focus {
      --tw-ring-color: var(--color-primary-light);
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:bg-danger {
    &:focus-visible {
      background-color: var(--color-danger);
    }
  }
  .focus-visible\:bg-info {
    &:focus-visible {
      background-color: var(--color-info);
    }
  }
  .focus-visible\:bg-primary {
    &:focus-visible {
      background-color: var(--color-primary);
    }
  }
  .focus-visible\:bg-secondary {
    &:focus-visible {
      background-color: var(--color-secondary);
    }
  }
  .focus-visible\:bg-success {
    &:focus-visible {
      background-color: var(--color-success);
    }
  }
  .focus-visible\:bg-warning {
    &:focus-visible {
      background-color: var(--color-warning);
    }
  }
  .focus-visible\:outline-2 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .focus-visible\:outline-offset-2 {
    &:focus-visible {
      outline-offset: 2px;
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:border-danger-dark\/20 {
    &:disabled {
      border-color: color-mix(in srgb, rgba(185, 28, 28) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-danger-dark) 20%, transparent);
      }
    }
  }
  .disabled\:border-info-dark\/20 {
    &:disabled {
      border-color: color-mix(in srgb, rgba(59, 130, 246) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-info-dark) 20%, transparent);
      }
    }
  }
  .disabled\:border-primary-dark\/20 {
    &:disabled {
      border-color: color-mix(in srgb, rgba(30, 58, 138) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-primary-dark) 20%, transparent);
      }
    }
  }
  .disabled\:border-secondary-dark\/20 {
    &:disabled {
      border-color: color-mix(in srgb, rgba(51, 65, 85) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-secondary-dark) 20%, transparent);
      }
    }
  }
  .disabled\:border-success-dark\/20 {
    &:disabled {
      border-color: color-mix(in srgb, rgba(77, 124, 15) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-success-dark) 20%, transparent);
      }
    }
  }
  .disabled\:border-warning-dark\/20 {
    &:disabled {
      border-color: color-mix(in srgb, rgba(180, 83, 9) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-warning-dark) 20%, transparent);
      }
    }
  }
  .disabled\:bg-danger-light\/70 {
    &:disabled {
      background-color: color-mix(in srgb, rgba(254, 202, 202) 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-danger-light) 70%, transparent);
      }
    }
  }
  .disabled\:bg-info-light\/70 {
    &:disabled {
      background-color: color-mix(in srgb, rgba(219, 234, 254) 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-info-light) 70%, transparent);
      }
    }
  }
  .disabled\:bg-primary-light\/70 {
    &:disabled {
      background-color: color-mix(in srgb, rgba(96, 165, 250) 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary-light) 70%, transparent);
      }
    }
  }
  .disabled\:bg-secondary-light\/70 {
    &:disabled {
      background-color: color-mix(in srgb, rgba(214, 211, 209) 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-secondary-light) 70%, transparent);
      }
    }
  }
  .disabled\:bg-success-light\/70 {
    &:disabled {
      background-color: color-mix(in srgb, rgba(217, 249, 157) 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-success-light) 70%, transparent);
      }
    }
  }
  .disabled\:bg-warning-light\/70 {
    &:disabled {
      background-color: color-mix(in srgb, rgba(253, 230, 138) 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-warning-light) 70%, transparent);
      }
    }
  }
  .disabled\:text-secondary-light {
    &:disabled {
      color: var(--color-secondary-light);
    }
  }
  .disabled\:before\:text-secondary-light {
    &:disabled {
      &::before {
        content: var(--tw-content);
        color: var(--color-secondary-light);
      }
    }
  }
  .sm\:w-96 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 96);
    }
  }
  .sm\:max-w-96 {
    @media (width >= 40rem) {
      max-width: calc(var(--spacing) * 96);
    }
  }
  .sm\:translate-y-0 {
    @media (width >= 40rem) {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .sm\:scale-95 {
    @media (width >= 40rem) {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .sm\:scale-100 {
    @media (width >= 40rem) {
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
[contenteditable="true"]:empty:before {
  content: attr(placeholder);
  pointer-events: none;
  display: block;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-content: "";
      --tw-outline-style: solid;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
